22/12/19

Pra facilitar a escolha das aplicações, eu só executei o script que tem no dir
scripts e fiz o download daqueles traces que tem lá.
Recomendo que todos façam o mesmo e não botem os traces no remote por motivos de
20gb :)


Infos de cada bench podem ser encontradas na página do SPEC CPU 2006:
https://www.spec.org/cpu2006/Docs/

Alguns padrões que eu acho interessantes de serem considerados:
- bzip2: integer. Imagino que compressão tenha um padrão de acesso aos dados
  contíguo e regular. Desse modo, com um prefetcher stream a gente consegue
tirar mais proveito do que com um prefetcher strided por ex. Ainda mostraria como
qualquer algoritmo de substituição não seria lá muito eficiente. Checar com
Francis.
- GCC: Acessos bem irregulares pros quais é difícil acertar qualquer coisa. Also
  é importante lembrar que haverá melhoras de uma configuração pra outra por
conta da evolução dos branch predictors escolhidos.
- astar: integer. Algoritmos de path finding em ambiente 2D.
- povray: ray tracing. Normalmente OO, o que torna o acesso à mem interessante.
  Also: iterações pelos objetos a cada pulo, teste de intersecção: branch
predictor.
- calculix: matrizes esparsas pra resolver equações diferenciais. Matrizes
  esparsas.

Any ideas?

24/12/19

Aqui na tese do Marco Zanatta (ex aluno do Navaux) tem infos sobre as aplicações
do SPEC (https://lume.ufrgs.br/handle/10183/96062). Aqui nesse coiso tbm:
https://www.ece.lsu.edu/lpeng/papers/isast08.pdf
Útil pra adicionar infos no relatório.


25/12/19

Sobre o código:

A cache é uma matriz de objetos do tipo block. Em ooo_cpu.cc:643: quando ocorre
um hit a um bloco da cache de instruções, o prefetcher desse bloco é chamado (se
houve hit, então pode-se por ex fazer prefetch da próxima linha de cache).

O código que ta nos arquivos de prefetcher é só o funcionamento básico de
cálculo do endereço a ser prefetched. A ação de buscar a linha é feita pela
cache mesmo.


Um stat útil: pf_issued.

Sobre o prefetcher kill the program counter prefetcher (kpcp):
http://hpca23.cse.tamu.edu/pdfs/p737-kim.pdf
